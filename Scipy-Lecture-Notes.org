#+TITLE: My reading notes for [[http://www.scipy-lectures.org/][Scipy Lecture Notes]]
#+DATE: <2018-04-11 Wed>

* [[http://www.scipy-lectures.org/intro/index.html][1. Getting started with Python for science — Scipy lecture notes]]

**** Basic visualization

#+BEGIN_SRC ipython :session :results raw drawer
import numpy as np
import matplotlib.pyplot as plt
#+END_SRC

#+RESULTS:
:results:
:end:

1D

#+BEGIN_SRC ipython :session :results raw drawer
  x = np.linspace(0, 3, 20)
  y = np.linspace(0, 9, 20)
  # 线
  plt.plot(x, y)
#+END_SRC

#+RESULTS:
:results:
: [<matplotlib.lines.Line2D at 0x113a36be0>]
[[file:./Scipy-Lecture-Notes/imgs/ggXMvL.png]]
:end:

#+BEGIN_SRC ipython :session :results raw drawer
  # 点
  plt.plot(x, y, 'o')
#+END_SRC

#+RESULTS:
:results:
: [<matplotlib.lines.Line2D at 0x113ac54e0>]
[[file:./Scipy-Lecture-Notes/imgs/RB0VeT.png]]
:end:

2D Array （指图片）

#+BEGIN_SRC ipython :session :results raw drawer
image = np.random.rand(30, 30)
plt.imshow(image, cmap=plt.cm.hot)
plt.colorbar()
#+END_SRC

#+RESULTS:
:results:
: <matplotlib.colorbar.Colorbar at 0x11430d908>
[[file:./Scipy-Lecture-Notes/imgs/KbybOb.png]]
:end:

三角函数 y = cos(x)

#+BEGIN_SRC ipython :session :results raw drawer
from math import pi, cos
x = np.linspace(-2*pi, 2*pi, 1000)
y = np.cos(x)
plt.plot(x, y)
#+END_SRC

#+RESULTS:
:results:
: [<matplotlib.lines.Line2D at 0x114449550>]
[[file:./Scipy-Lecture-Notes/imgs/1bZDTV.png]]
:end:

2D 矩阵

#+BEGIN_SRC ipython :session :results raw drawer
  lao = np.array([[1,2], [3,4]])
  plt.imshow(lao)
#+END_SRC

#+RESULTS:
:results:
: <matplotlib.image.AxesImage at 0x1145c7b00>
[[file:./Scipy-Lecture-Notes/imgs/VjlIsA.png]]
:end:

**** 1.3.1.5. Indexing and slicing

Index 1D array

#+BEGIN_SRC ipython :session :results raw drawer
a = np.arange(10)
a[0], a[1], a[-1]
#+END_SRC

#+RESULTS:
:results:
: (0, 1, 9)
:end:

reverse

#+BEGIN_SRC ipython :session :results raw drawer
a[::-1]
#+END_SRC

#+RESULTS:
:results:
: array([9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
:end:

index 2D array

#+BEGIN_SRC ipython :session :results raw drawer
a = np.diag(np.arange(3))
a
#+END_SRC

#+RESULTS:
:results:
#+BEGIN_EXAMPLE
  array([[0, 0, 0],
  [0, 1, 0],
  [0, 0, 2]])
#+END_EXAMPLE
:end:

#+BEGIN_SRC ipython :session :results raw drawer
a[1, 1], a[1]
#+END_SRC

#+RESULTS:
:results:
: (1, array([0, 1, 0]))
:end:
